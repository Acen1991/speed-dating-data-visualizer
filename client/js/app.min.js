angular.module("speed-data-app",[]).controller("baseController",["$scope",function(){}]),function(){d3.json("js/data.json",function(error,json){return error?console.warn(error):void vizualize(json)});var vizualize=function(speed_dating_data){m=[80,80,80,80],w=1200-m[1]-m[3],h=500-m[0]-m[2],ym_range=d3.scale.ordinal().domain(speed_dating_data.attributes_data.m_axis_values).rangePoints([0,400]),yf_range=d3.scale.ordinal().domain(speed_dating_data.attributes_data.f_axis_values).rangePoints([0,400]);var graph=d3.select("#graph").append("g").attr("transform","translate("+m[3]+","+m[0]+")"),ymAxis=d3.svg.axis().scale(ym_range).ticks(4).orient("left");graph.append("g").attr("class","y axis axisLeft").attr("transform","translate(-15,0)").call(ymAxis);var yfAxis=d3.svg.axis().scale(yf_range).ticks(6).orient("right");graph.append("g").attr("class","y axis axisRight").attr("transform","translate("+(w+15)+",0)").call(yfAxis);var enter=graph.selectAll("g").data(speed_dating_data.values,function(d){return"object"==typeof d?d.couple_id:d}).enter();enter.append("g").append("polygon").attr("points",function(d){var commonPolygonData=commonPolygonDataFunc(d),thirdTopRightPoint={x:.3*(w+15),y:commonPolygonData.functions.topLineEquation(.3*(w+15))},thirdBottomRightPoint={x:.3*(w+15),y:commonPolygonData.functions.bottomLineEquation(.3*(w+15))},allPoints=[];return allPoints.push(commonPolygonData.borderPoints.topLeftPoint.x+","+commonPolygonData.borderPoints.topLeftPoint.y),allPoints.push(thirdTopRightPoint.x+","+thirdTopRightPoint.y),allPoints.push(thirdBottomRightPoint.x+","+thirdBottomRightPoint.y),allPoints.push(commonPolygonData.borderPoints.bottomLeftPoint.x+","+commonPolygonData.borderPoints.bottomLeftPoint.y),allPoints.join(" ")}).attr("style",function(d){return commonStyleFunction(d,d.m_like_f)}),enter.append("g").append("polygon").attr("points",function(d){var commonPolygonData=commonPolygonDataFunc(d),thirdTopRightPoint={x:.3*(w+15),y:commonPolygonData.functions.topLineEquation(.3*(w+15))},thirdBottomRightPoint={x:.3*(w+15),y:commonPolygonData.functions.bottomLineEquation(.3*(w+15))},twoThirdTopRightPoint={x:.6*(w+15),y:commonPolygonData.functions.topLineEquation(.6*(w+15))},twoThirdBottomRightPoint={x:.6*(w+15),y:commonPolygonData.functions.bottomLineEquation(.6*(w+15))},allPoints=[];return allPoints.push(thirdTopRightPoint.x+","+thirdTopRightPoint.y),allPoints.push(twoThirdTopRightPoint.x+","+twoThirdTopRightPoint.y),allPoints.push(twoThirdBottomRightPoint.x+","+twoThirdBottomRightPoint.y),allPoints.push(thirdBottomRightPoint.x+","+thirdBottomRightPoint.y),allPoints.join(" ")}).attr("style",function(d){return commonStyleFunction(d,d.both_like)}),enter.append("g").append("polygon").attr("points",function(d){var commonPolygonData=commonPolygonDataFunc(d),twoThirdTopRightPoint={x:.6*(w+15),y:commonPolygonData.functions.topLineEquation(.6*(w+15))},twoThirdBottomRightPoint={x:.6*(w+15),y:commonPolygonData.functions.bottomLineEquation(.6*(w+15))},allPoints=[];return allPoints.push(twoThirdTopRightPoint.x+","+twoThirdTopRightPoint.y),allPoints.push(commonPolygonData.borderPoints.topRightPoint.x+","+commonPolygonData.borderPoints.topRightPoint.y),allPoints.push(commonPolygonData.borderPoints.bottomRightPoint.x+","+commonPolygonData.borderPoints.bottomRightPoint.y),allPoints.push(twoThirdBottomRightPoint.x+","+twoThirdBottomRightPoint.y),allPoints.join(" ")}).attr("style",function(d){return commonStyleFunction(d,d.f_like_m)})},commonPolygonDataFunc=function(d){var ymScaledPosition=ym_range.call("scale",d.m_attribute_value),yfScaledPosition=yf_range.call("scale",d.f_attribute_value),m_success_factor=25*d.m_success_attribute,f_success_factor=25*d.f_success_attribute,topLeftPoint={x:-15,y:ymScaledPosition-m_success_factor},topRightPoint={x:w+15,y:yfScaledPosition-f_success_factor},bottomRightPoint={x:w+15,y:yfScaledPosition+f_success_factor},bottomLeftPoint={x:-15,y:ymScaledPosition+m_success_factor},topLineEquation=straightEquation(topLeftPoint.x,topLeftPoint.y,topRightPoint.x,topRightPoint.y),bottomLineEquation=straightEquation(bottomLeftPoint.x,bottomLeftPoint.y,bottomRightPoint.x,bottomRightPoint.y);return{borderPoints:{topLeftPoint:topLeftPoint,topRightPoint:topRightPoint,bottomRightPoint:bottomRightPoint,bottomLeftPoint:bottomLeftPoint},functions:{topLineEquation:topLineEquation,bottomLineEquation:bottomLineEquation}}},straightEquation=function(x1,y1,x2,y2){var a=(y2-y1)/(x2-x1),b=y2-a*x2;return function(x){return a*x+b}},commonStyleFunction=function(d,factor){var strokeWidth="stroke-width:1",stroke="stroke:purple",styles=[];return styles.push(fillFunction(factor)),styles.push(strokeWidth),styles.push(stroke),styles.join(";")},fillFunction=function(factor){var fill;return fill=factor>=.6?"fill:rgb(0,"+Math.round(255*factor)+",0)":factor>.3&&.6>factor?"fill:rgb(0,"+Math.round(255*factor)+",0)":"fill:rgb("+255*Math.round(1-factor)+",0,0)"}}();